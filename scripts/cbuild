#!/usr/bin/env node

var program = require('commander')
var mkdir = require('mkdirp').sync
var PATH = require('path')
var join = PATH.join
var write = require('fs').writeFileSync
var Builder = require('component-builder')
var stylus = require('stylus')
var nib = require('nib')

program
  .usage('ccbuild <component_dir>')
  .option('-o, --out <dir>', 'Output directory', 'build')
  .option('-n, --name <file>', 'Base name for output files', 'build')
  .option('-d, --development', 'Build development dependencies')
  .parse(process.argv)

var js = join(program.out, program.name + '.js')
var css =join(program.out, program.name + '.css')

var builder = new Builder('.')

builder.addLookup(join(__dirname, '../lib'))
builder.addLookup(join(__dirname, '../components'))

if (program.dev) builder.development()

builder.build(function (err, obj) {
  if (err) throw err

  mkdir(program.out)

  if (obj.css) {
    stylus(obj.css)
      .use(nib())
      .render(function (err, out) {
        if (err) throw err
        write(css, out, 'utf8')
      })
  }

  if (obj.js.slice().trim()) write(js, obj.require + '\n' + obj.js, 'utf8')
})
